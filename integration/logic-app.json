{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "String",
      "metadata": { "description": "Name of the logic app." }
    },
    "logicAppLocation": {
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uaecentral",
        "westcentralus",
        "westus2",
        "[resourceGroup().location]"
      ],
      "type": "String",
      "metadata": { "description": "Location of the logic app." }
    },
    "office365_Connection_Name": {
      "defaultValue": "office365",
      "type": "String",
      "metadata": { "description": "Name of the connection." }
    },
    "todo_Connection_Name": {
      "defaultValue": "todo",
      "type": "String",
      "metadata": { "description": "Name of the connection." }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('office365_Connection_Name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('todo_Connection_Name'))]"
      ],
      "properties": {
        "state": "Disabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": { "defaultValue": {}, "type": "Object" },
            "$authentication": { "defaultValue": {}, "type": "SecureObject" }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": { "type": "string" },
                    "id": { "type": "string" }
                  }
                },
                "method": "POST"
              }
            }
          },
          "actions": {
            "Switch": {
              "runAfter": {},
              "cases": {
                "Get_Calendar": {
                  "case": "get-calendar",
                  "actions": {
                    "Get_calendar_view_of_events_(V3)": {
                      "runAfter": {},
                      "metadata": {
                        "flowSystemMetadata": {
                          "swaggerOperationId": "GetEventsCalendarViewV3"
                        }
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['office365']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/datasets/calendars/v3/tables/items/calendarview",
                        "queries": {
                          "calendarId": "AAMkAGVkOTY3NDlkLTQ1Y2MtNDM3ZC04OWIzLWY2OWU4ZGUzYTE0OABGAAAAAAD3HkvjQ4fjR71y03VTj6-ABwAbJ0OfIbHVTI9R0aR69zEqAAAAAAEGAAAbJ0OfIbHVTI9R0aR69zEqAAAC1G7IAAA=",
                          "startDateTimeUtc": "@{startOfDay(utcNow())}",
                          "endDateTimeUtc": "@{addDays(startOfDay(utcNow()),1)}"
                        },
                        "authentication": "@parameters('$authentication')"
                      }
                    },
                    "Response_-_Calendar": {
                      "runAfter": {
                        "Get_calendar_view_of_events_(V3)": ["Succeeded"]
                      },
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "statusCode": 200,
                        "body": "@body('Get_calendar_view_of_events_(V3)')"
                      }
                    }
                  }
                },
                "Get_Tasks": {
                  "case": "get-tasks",
                  "actions": {
                    "Response_-_Tasks": {
                      "runAfter": { "Filter_array": ["Succeeded"] },
                      "type": "Response",
                      "kind": "Http",
                      "inputs": {
                        "statusCode": 200,
                        "body": "@body('Filter_array')"
                      }
                    },
                    "List_all_to-do's": {
                      "runAfter": {},
                      "metadata": {
                        "flowSystemMetadata": {
                          "swaggerOperationId": "ListAllToDos"
                        }
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['todo']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/tasks",
                        "queries": { "$top": 999 },
                        "authentication": "@parameters('$authentication')"
                      }
                    },
                    "Filter_array": {
                      "runAfter": { "List_all_to-do's": ["Succeeded"] },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('List_all_to-do''s')",
                        "where": "@not(equals(item()?['status'], 'completed'))"
                      }
                    }
                  }
                }
              },
              "default": { "actions": {} },
              "expression": "@triggerBody()?['action']",
              "type": "Switch"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "office365": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('office365_Connection_Name'))]",
                "connectionName": "[parameters('office365_Connection_Name')]"
              },
              "todo": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'todo')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('todo_Connection_Name'))]",
                "connectionName": "[parameters('todo_Connection_Name')]"
              }
            }
          }
        },
        "runtimeConfiguration": {
          "lifetime": { "unit": "Day", "count": 30 },
          "collections": { "maximumItemCount": 100000 },
          "performanceProfile": { "throttles": { "mode": "Medium" } }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('office365_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'office365')]"
        },
        "displayName": "[parameters('office365_Connection_Name')]"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('todo_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'todo')]"
        },
        "displayName": "[parameters('todo_Connection_Name')]"
      }
    }
  ]
}
